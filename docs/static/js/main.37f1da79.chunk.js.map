{"version":3,"sources":["contexts/TodoContext.js","hooks/useForm.js","components/Form.js","components/ListTodosItem.js","components/ListTodos.js","reducers/todoReducer.js","AppReducer.js","index.js"],"names":["TodoContext","createContext","useForm","initialState","useState","formValues","setFormValues","e","target","name","value","Form","useContext","dispatch","editionMode","setEditionMode","task","handleChange","resetForm","onSubmit","state","preventDefault","type","payload","id","todo","trim","length","Date","getTime","done","className","placeholder","onChange","autoComplete","disabled","onClick","ListTodosItem","index","ListTodos","todos","scope","map","todoReducer","action","filter","AppReducer","useReducer","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37f1da79.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst TodoContext = createContext(null);\r\n\r\nexport default TodoContext;\r\n","import { useState } from 'react';\r\n\r\nconst useForm = (initialState) => {\r\n  const [formValues, setFormValues] = useState(initialState);\r\n\r\n  const handleChange = (e) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  return [formValues, handleChange, resetForm];\r\n};\r\n\r\nexport default useForm;\r\n","import React, { useContext } from 'react';\r\nimport TodoContext from '../contexts/TodoContext';\r\nimport useForm from '../hooks/useForm';\r\n\r\nconst Form = () => {\r\n  const { dispatch, editionMode, setEditionMode } = useContext(TodoContext);\r\n\r\n  const [{ task }, handleChange, resetForm] = useForm({\r\n    task: '',\r\n  });\r\n\r\n  const handleSubmitAdd = (e) => {\r\n    e.preventDefault();\r\n    if (task.trim().length > 2) {\r\n      dispatch({\r\n        type: 'add',\r\n        payload: {\r\n          id: new Date().getTime(),\r\n          todo: task,\r\n          done: false,\r\n        },\r\n      });\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  const handleSubmitEdit = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: 'edit',\r\n      payload: {\r\n        id: editionMode.id,\r\n        todo: task,\r\n      },\r\n    });\r\n    setEditionMode({ id: '', state: false });\r\n    resetForm();\r\n  };\r\n\r\n  const cancelEditionModeClick = () => {\r\n    setEditionMode({ id: '', state: false });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Form</h2>\r\n      <hr />\r\n      <form onSubmit={!editionMode.state ? handleSubmitAdd : handleSubmitEdit}>\r\n        <input\r\n          className=\"form-control mb-3\"\r\n          type=\"text\"\r\n          placeholder={\r\n            !editionMode.state ? 'Introduce a todo ...' : `${editionMode.todo}`\r\n          }\r\n          name=\"task\"\r\n          value={task}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\"\r\n        />\r\n        <input\r\n          className={\r\n            !editionMode.state\r\n              ? 'btn btn-outline-primary'\r\n              : 'btn btn-outline-warning'\r\n          }\r\n          type=\"submit\"\r\n          value={!editionMode.state ? 'Add' : 'Edit'}\r\n          disabled={!(task.trim().length > 2)}\r\n        />\r\n        {editionMode.state && (\r\n          <input\r\n            onClick={cancelEditionModeClick}\r\n            className=\" ml-3 btn btn-outline-danger\"\r\n            type=\"button\"\r\n            value=\"Cancel\"\r\n          />\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useContext } from 'react';\r\nimport TodoContext from '../contexts/TodoContext';\r\n\r\nconst ListTodosItem = ({ todo, id, done, index }) => {\r\n  const { dispatch, setEditionMode } = useContext(TodoContext);\r\n\r\n  const toggleChange = () => {\r\n    dispatch({\r\n      type: 'toggle',\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const deleteClick = () => {\r\n    dispatch({\r\n      type: 'delete',\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const editClick = () => {\r\n    setEditionMode({ id, state: true, todo });\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td>{index + 1}</td>\r\n      <td>\r\n        <span className={`${done && 'complete'}`}>{todo} </span>\r\n      </td>\r\n      <td>{id}</td>\r\n      <td>\r\n        {done ? <span>✔️</span> : <span>❌</span>}{' '}\r\n        <button\r\n          onClick={toggleChange}\r\n          className=\"btn btn-outline-info\"\r\n          type=\"button\"\r\n        >\r\n          Change\r\n        </button>\r\n      </td>\r\n\r\n      <td>\r\n        <button\r\n          onClick={editClick}\r\n          className=\"btn btn-outline-warning mr-2\"\r\n          type=\"button\"\r\n        >\r\n          Edit\r\n        </button>\r\n        <button\r\n          onClick={deleteClick}\r\n          className=\"btn btn-outline-danger\"\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ListTodosItem;\r\n","import React, { useContext } from 'react';\r\nimport TodoContext from '../contexts/TodoContext';\r\nimport ListTodosItem from './ListTodosItem';\r\n\r\nconst ListTodos = () => {\r\n  const { todos } = useContext(TodoContext);\r\n\r\n  return (\r\n    <div>\r\n      <h2>List Todos</h2>\r\n      <hr />\r\n      <div className=\"table-x\">\r\n        <table className=\"table table-dark\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">N°</th>\r\n              <th scope=\"col\">Todo</th>\r\n              <th scope=\"col\">Id</th>\r\n              <th scope=\"col\">Done</th>\r\n              <th scope=\"col\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {todos.map((todo, index) => (\r\n              <ListTodosItem key={todo.id} {...todo} index={index} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListTodos;\r\n","const todoReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'add':\r\n      return [...state, action.payload];\r\n    case 'toggle':\r\n      return state.map((todo) =>\r\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo,\r\n      );\r\n    case 'delete':\r\n      return state.filter((todo) => todo.id !== action.payload);\r\n\r\n    case 'edit':\r\n      return state.map((todo) =>\r\n        todo.id === action.payload.id\r\n          ? { ...todo, todo: action.payload.todo }\r\n          : todo,\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoReducer;\r\n","import React, { useEffect, useReducer, useState } from 'react';\r\nimport Form from './components/Form';\r\nimport ListTodos from './components/ListTodos';\r\nimport TodoContext from './contexts/TodoContext';\r\n\r\nimport todoReducer from './reducers/todoReducer';\r\n\r\nconst AppReducer = () => {\r\n  const init = () => {\r\n    return JSON.parse(localStorage.getItem('list-todos-best')) || [];\r\n  };\r\n\r\n  const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n  const [editionMode, setEditionMode] = useState({\r\n    id: '',\r\n    state: false,\r\n    todo: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('list-todos-best', JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  return (\r\n    <div>\r\n      <TodoContext.Provider\r\n        value={{ todos, dispatch, editionMode, setEditionMode }}\r\n      >\r\n        <h1>AppReducer! </h1>\r\n        <hr />\r\n        <div className=\"row\">\r\n          <div className=\"col-9\">\r\n            <ListTodos />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Form />\r\n          </div>\r\n        </div>\r\n      </TodoContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport AppReducer from './AppReducer';\r\n\r\nReactDOM.render(<AppReducer />, document.getElementById('root'));\r\n"],"sourceRoot":""}