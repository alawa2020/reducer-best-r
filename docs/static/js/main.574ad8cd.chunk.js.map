{"version":3,"sources":["types/types.js","auth/authReducer.js","contexts/TodoContext.js","reducers/todoReducer.js","hooks/useForm.js","components/login/LoginScreen.js","components/about/AboutScreen.js","components/others/NotFound.js","components/todos/Form.js","components/todos/ListTodosItem.js","components/todos/Title.js","components/todos/ListTodos.js","components/todos/TodosScreen.js","components/ui/NavBar.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","AppReducer.js","index.js"],"names":["types","login","logout","authReducer","state","action","type","payload","logged","TodoContext","createContext","todoReducer","map","todo","id","done","filter","useForm","initialState","useState","formValues","setFormValues","e","target","name","value","LoginScreen","dispatchAuth","useContext","nick","handleChange","history","useHistory","className","onSubmit","preventDefault","trim","length","replace","placeholder","autoComplete","onChange","AboutScreen","NotFound","Form","dispatch","editionMode","setEditionMode","task","resetForm","Date","getTime","disabled","onClick","ListTodosItem","index","Title","todos","percentDone","setpercentDone","useEffect","totalTodos","totalTodosDone","Math","round","getPercentDone","ListTodos","scope","TodosScreen","NavBar","userAuth","to","exact","activeClassName","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","AppReducer","useReducer","JSON","parse","localStorage","getItem","setItem","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.574ad8cd.chunk.js","sourcesContent":["const types = {\r\n  login: '[auth] login',\r\n  logout: '[auth] logout',\r\n};\r\n\r\nexport default types;\r\n","import types from '../types/types';\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        ...action.payload,\r\n        logged: true,\r\n      };\r\n    case types.logout:\r\n      return {\r\n        logged: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { createContext } from 'react';\r\n\r\nconst TodoContext = createContext(null);\r\n\r\nexport default TodoContext;\r\n","const todoReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'add':\r\n      return [...state, action.payload];\r\n    case 'toggle':\r\n      return state.map((todo) =>\r\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo,\r\n      );\r\n    case 'delete':\r\n      return state.filter((todo) => todo.id !== action.payload);\r\n\r\n    case 'edit':\r\n      return state.map((todo) =>\r\n        todo.id === action.payload.id\r\n          ? { ...todo, todo: action.payload.todo }\r\n          : todo,\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoReducer;\r\n","import { useState } from 'react';\r\n\r\nconst useForm = (initialState) => {\r\n  const [formValues, setFormValues] = useState(initialState);\r\n\r\n  const handleChange = (e) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  return [formValues, handleChange, resetForm];\r\n};\r\n\r\nexport default useForm;\r\n","import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport TodoContext from '../../contexts/TodoContext';\r\nimport useForm from '../../hooks/useForm';\r\nimport types from '../../types/types';\r\n\r\nconst LoginScreen = () => {\r\n  const { dispatchAuth } = useContext(TodoContext);\r\n  const [formValues, handleChange] = useForm({\r\n    nick: '',\r\n  });\r\n\r\n  const { nick } = formValues;\r\n\r\n  const history = useHistory();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (nick.trim().length > 2) {\r\n      dispatchAuth({\r\n        type: types.login,\r\n        payload: {\r\n          name: nick,\r\n        },\r\n      });\r\n      history.replace('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <hr />\r\n      <div className=\"container\">\r\n        <form onSubmit={handleLogin}>\r\n          <input\r\n            className=\"form-control\"\r\n            placeholder=\"Input a nick...\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            name=\"nick\"\r\n            value={nick}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            className=\"btn btn-outline-info mt-3\"\r\n            type=\"submit\"\r\n            value=\"Login\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React from 'react';\r\n\r\nconst AboutScreen = () => {\r\n  return (\r\n    <div>\r\n      <h3>About Screen</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutScreen;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h3>Pagina no encontrada</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useContext } from 'react';\r\nimport TodoContext from '../../contexts/TodoContext';\r\nimport useForm from '../../hooks/useForm';\r\n\r\nconst Form = () => {\r\n  const { dispatch, editionMode, setEditionMode } = useContext(TodoContext);\r\n\r\n  const [{ task }, handleChange, resetForm] = useForm({\r\n    task: '',\r\n  });\r\n\r\n  const handleSubmitAdd = (e) => {\r\n    e.preventDefault();\r\n    if (task.trim().length > 2) {\r\n      dispatch({\r\n        type: 'add',\r\n        payload: {\r\n          id: new Date().getTime(),\r\n          todo: task,\r\n          done: false,\r\n        },\r\n      });\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  const handleSubmitEdit = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: 'edit',\r\n      payload: {\r\n        id: editionMode.id,\r\n        todo: task,\r\n      },\r\n    });\r\n    setEditionMode({ id: '', state: false });\r\n    resetForm();\r\n  };\r\n\r\n  const cancelEditionModeClick = () => {\r\n    setEditionMode({ id: '', state: false });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Form</h2>\r\n      <form onSubmit={!editionMode.state ? handleSubmitAdd : handleSubmitEdit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-9\">\r\n            <input\r\n              className=\"form-control mb-3\"\r\n              type=\"text\"\r\n              placeholder={\r\n                !editionMode.state\r\n                  ? 'Introduce a todo ...'\r\n                  : `${editionMode.todo}`\r\n              }\r\n              name=\"task\"\r\n              value={task}\r\n              onChange={handleChange}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <input\r\n              className={\r\n                !editionMode.state\r\n                  ? 'btn btn-outline-primary'\r\n                  : 'btn btn-outline-warning'\r\n              }\r\n              type=\"submit\"\r\n              value={!editionMode.state ? 'Add' : 'Save'}\r\n              disabled={!(task.trim().length > 2)}\r\n            />\r\n            {editionMode.state && (\r\n              <input\r\n                onClick={cancelEditionModeClick}\r\n                className=\" ml-3 btn btn-outline-danger\"\r\n                type=\"button\"\r\n                value=\"Cancel\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useContext } from 'react';\r\nimport TodoContext from '../../contexts/TodoContext';\r\n\r\nconst ListTodosItem = ({ todo, id, done, index }) => {\r\n  const { dispatch, setEditionMode } = useContext(TodoContext);\r\n\r\n  const toggleChange = () => {\r\n    dispatch({\r\n      type: 'toggle',\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const deleteClick = () => {\r\n    dispatch({\r\n      type: 'delete',\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const editClick = () => {\r\n    setEditionMode({ id, state: true, todo });\r\n  };\r\n\r\n  return (\r\n    <tr className=\"\">\r\n      <td>{index + 1}</td>\r\n      <td>\r\n        <span className={`${done && 'complete'}`}>{todo} </span>\r\n      </td>\r\n      <td>{id}</td>\r\n      <td>\r\n        {done ? <span>✔️</span> : <span>❌</span>}{' '}\r\n        <button\r\n          onClick={toggleChange}\r\n          className=\"btn btn-outline-info\"\r\n          type=\"button\"\r\n        >\r\n          Change\r\n        </button>\r\n      </td>\r\n\r\n      <td>\r\n        <button\r\n          onClick={editClick}\r\n          className=\"btn btn-outline-warning mr-2\"\r\n          type=\"button\"\r\n        >\r\n          Edit\r\n        </button>\r\n        <button\r\n          onClick={deleteClick}\r\n          className=\"btn btn-outline-danger\"\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ListTodosItem;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst Title = ({ todos }) => {\r\n  const [percentDone, setpercentDone] = useState(null);\r\n\r\n  const getPercentDone = () => {\r\n    const totalTodos = todos.length;\r\n    const totalTodosDone = todos.filter((todo) => todo.done).length;\r\n    setpercentDone(Math.round((totalTodosDone / totalTodos) * 100));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPercentDone();\r\n  }, [todos]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        Todo List{' '}\r\n        {!!todos.length && (\r\n          <span className=\"animate__animated animate__fadeIn title-color\">\r\n            ( <span>{percentDone}</span>% complete)\r\n          </span>\r\n        )}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { useContext } from 'react';\r\nimport TodoContext from '../../contexts/TodoContext';\r\nimport ListTodosItem from './ListTodosItem';\r\nimport Title from './Title';\r\n\r\nconst ListTodos = () => {\r\n  const { todos } = useContext(TodoContext);\r\n  return (\r\n    <div>\r\n      <Title todos={todos} />\r\n      {!todos.length ? (\r\n        <p className=\"animate__animated animate__fadeIn\">\r\n          Your Todo List is empty!\r\n        </p>\r\n      ) : (\r\n        // <div className=\"table-x animate__animated animate__fadeIn\">\r\n        <div className=\"table-x\">\r\n          <table className=\"table table-dark\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">N°</th>\r\n                <th scope=\"col\">Todo</th>\r\n                <th scope=\"col\">Id</th>\r\n                <th scope=\"col\">Done</th>\r\n                <th scope=\"col\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {todos.map((todo, index) => (\r\n                <ListTodosItem key={todo.id} {...todo} index={index} />\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListTodos;\r\n","import React from 'react';\r\nimport Form from './Form';\r\nimport ListTodos from './ListTodos';\r\n\r\nconst TodosScreen = () => {\r\n  return (\r\n    <div>\r\n      <Form />\r\n      <hr />\r\n      <ListTodos />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodosScreen;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { useHistory, Link, NavLink } from 'react-router-dom';\r\nimport TodoContext from '../../contexts/TodoContext';\r\nimport types from '../../types/types';\r\n\r\nconst NavBar = () => {\r\n  const { userAuth, dispatchAuth } = useContext(TodoContext);\r\n  const history = useHistory();\r\n\r\n  const handleClickLogout = () => {\r\n    dispatchAuth({\r\n      type: types.logout,\r\n    });\r\n    history.replace('/login');\r\n  };\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        APP\r\n      </Link>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink exact activeClassName=\"active\" className=\"nav-link\" to=\"/\">\r\n              Todos\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              exact\r\n              activeClassName=\"active\"\r\n              className=\"nav-link\"\r\n              to=\"/about\"\r\n            >\r\n              About\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n        <span className=\"navbar-text text-info\">{userAuth.name}</span>\r\n        <button\r\n          onClick={handleClickLogout}\r\n          type=\"button\"\r\n          className=\"btn text-secondary\"\r\n        >\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport AboutScreen from '../components/about/AboutScreen';\r\nimport NotFound from '../components/others/NotFound';\r\nimport TodosScreen from '../components/todos/TodosScreen';\r\nimport NavBar from '../components/ui/NavBar';\r\n\r\nconst DashboardRoutes = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className=\"container mt-3\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={TodosScreen} />\r\n          <Route exact path=\"/about\" component={AboutScreen} />\r\n          <Route exact path=\"/notfound\" component={NotFound} />\r\n          <Redirect to=\"/notfound\" />\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardRoutes;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nconst PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React, { useContext } from 'react';\r\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport LoginScreen from '../components/login/LoginScreen';\r\nimport TodoContext from '../contexts/TodoContext';\r\nimport DashboardRoutes from './DashboardRoutes';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\nconst AppRouter = () => {\r\n  const { userAuth } = useContext(TodoContext);\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <PublicRoute\r\n          exact\r\n          path=\"/login\"\r\n          component={LoginScreen}\r\n          isAuthenticated={userAuth.logged}\r\n        />\r\n        <PrivateRoute\r\n          path=\"/\"\r\n          component={DashboardRoutes}\r\n          isAuthenticated={userAuth.logged}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useReducer, useState } from 'react';\r\nimport authReducer from './auth/authReducer';\r\nimport TodoContext from './contexts/TodoContext';\r\n\r\nimport todoReducer from './reducers/todoReducer';\r\nimport AppRouter from './routers/AppRouter';\r\n\r\nconst AppReducer = () => {\r\n  // useReducer of Todos\r\n  const init = () => {\r\n    return JSON.parse(localStorage.getItem('list-todos-best')) || [];\r\n  };\r\n\r\n  const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n  const [editionMode, setEditionMode] = useState({\r\n    id: '',\r\n    state: false,\r\n    todo: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('list-todos-best', JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  // userReducer of auth\r\n  const initAuth = () => {\r\n    return (\r\n      JSON.parse(localStorage.getItem('user-auth-todos')) || { logged: false }\r\n    );\r\n  };\r\n\r\n  const [userAuth, dispatchAuth] = useReducer(authReducer, {}, initAuth);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('user-auth-todos', JSON.stringify(userAuth));\r\n  }, [userAuth]);\r\n\r\n  return (\r\n    <div>\r\n      <TodoContext.Provider\r\n        value={{\r\n          todos,\r\n          dispatch,\r\n          editionMode,\r\n          setEditionMode,\r\n          userAuth,\r\n          dispatchAuth,\r\n        }}\r\n      >\r\n        <AppRouter />\r\n      </TodoContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport AppReducer from './AppReducer';\r\n\r\nReactDOM.render(<AppReducer />, document.getElementById('root'));\r\n"],"sourceRoot":""}